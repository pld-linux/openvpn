#!/bin/sh
#
# openvpn	Start/stop the VPN daemon.
#
# chkconfig:	2345 11 89
#
# description:	OpenVPN is a robust and highly configurable VPN (Virtual \
#		Private Network) daemon
#

# Source function library
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down OpenVPN
		exit 1
	fi
else
	exit 0
fi

# Get service config
[ -f /etc/sysconfig/openvpn ] && . /etc/sysconfig/openvpn

[ -n "$2" ] && TUNNELS="$2"

# check if all the tunnels are up
tunlup() {
	ret=0
	for tun in $TUNNELS; do
		pidfile=/var/run/openvpn/$tun.pid
		pid=$(cat $pidfile 2>/dev/null)
		kill -0 $pid 2>/dev/null && continue
		ret=1
	done
	return $ret
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
	# Check if the service is already running?
	if ! tunlup; then
		msg_starting "OpenVPN"; started
		if [ -z "$TUNNELS" ]; then
			nls "No tunnels configured in /etc/sysconfig/openvpn"
			exit 6
		fi
		for tun in $TUNNELS; do
			show "Starting OpenVPN tunnel %s" "$tun"
			if TUNNELS=$tun tunlup; then
				started
				continue
			fi
			daemon openvpn --daemon --writepid "/var/run/openvpn/$tun.pid" \
				--config "/etc/openvpn/$tun.conf" --cd /etc/openvpn
			RET=$?
			[ $RETVAL -eq 0 ] && RETVAL=$RET
		done
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/openvpn
	else
		msg_already_running "OpenVPN"
	fi
	;;
  stop)
	if tunlup; then
		# Stop daemons.
		msg_stopping "OpenVPN"; started
		for tun in $TUNNELS; do
			pidfile=/var/run/openvpn/$tun.pid
			[ -f "$pidfile" ] || continue
			pid=`cat "$pidfile"`
			show "Stopping OpenVPN tunnel %s" "$tun"; busy
			killproc --pidfile openvpn/$tun.pid || err=1
		done
		rm -f /var/lock/subsys/openvpn >/dev/null 2>&1
	else
		msg_not_running "OpenVPN"
	fi
	;;
  status)
	status openvpn
	exit $?
	;;
  reload|force-reload)
	if tunlup; then
		msg_reloading "OpenVPN"; started
		for tun in $TUNNELS; do
			show "Reloading OpenVPN tunnel %s" "$tun"
			killproc --pidfile openvpn/$tun.pid openvpn -USR1
			[ $? -ne 0 -a $RETVAL -eq 0 ] && RETVAL=7
		done
	else
		msg_not_running OpenVPN >&2
		exit 7
	fi
	;;
  restart)
	$0 stop "$TUNNELS"
	sleep 1
	$0 start "$TUNNELS"
	exit $?
	;;
  *)
	msg_usage "$0 {start|stop|restart|reload|force-reload|status}"
	exit 3
	;;
esac

exit $RETVAL
